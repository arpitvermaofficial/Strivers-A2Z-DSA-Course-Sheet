//{ Driver Code Starts
// Initial Template for C++



#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int pageFaults(int n, int c, int a[]){
        // code here
        map<int,int>m;
        int count=0;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>p;
        for(int i=0;i<n;i++){
            if(m[a[i]]==0){
                count++;
                
                m[a[i]]=i+1;
                if(!p.empty()&&p.size()==c){
                m[p.top().second]=0;
               
                p.pop();}
                p.push({i+1,a[i]});
            }
            else{
                m[a[i]]=i+1;
                vector<pair<int,int>>v1;
                while(p.top().second!=a[i]){
                    v1.push_back(p.top());
                    p.pop();
                }
                p.pop();
                p.push({i+1,a[i]});
                while(!v1.empty()){
                    p.push(v1.back());
                    v1.pop_back();
                }
                
            }
        }
        return count;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N, C;
        cin>>N;
        int pages[N];
        for(int i = 0;i < N;i++)
            cin>>pages[i];
        cin>>C;
        
        Solution ob;
        cout<<ob.pageFaults(N, C, pages)<<"\n";
    }
    return 0;
}
// } Driver Code Ends
