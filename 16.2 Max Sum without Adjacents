//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


// } Driver Code Ends
//User function template for C++
class Solution{
public:	
	// calculate the maximum sum with out adjacent
	int findMaxSum(int *arr, int n) {
	  int prev=arr[0];
	  int prev1=0;
	   for(int i=1;i<n;i++){
	       int pick=arr[i];
	       if(i>1)
	       pick=arr[i]+prev1;
	    int notpick=prev;
	    int curr=max(pick,notpick);
	     prev1=prev;
	    prev=curr;
	   
	   }
	   return prev;
	}
// 	int  maxi(int curr,vector<int>&dp,int *arr){
// 	    if(curr==0)
// 	    return dp[0]=arr[0];
// 	    if(dp[curr]!=-1)
// 	    return dp[curr];
// 	    int pick=arr[curr]+maxi(curr-2,dp,arr);
// 	    int notpick=maxi(curr-1,dp,arr);
// 	    return dp[curr]=max(pick,notpick);
// 	}
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        auto ans = ob.findMaxSum(arr, n);
        cout << ans << "\n";
    }
    return 0;
}
// } Driver Code Ends
