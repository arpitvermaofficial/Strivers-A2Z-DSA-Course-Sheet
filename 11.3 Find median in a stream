//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;



// } Driver Code Ends
class Solution
{
    public:
    priority_queue<int>maxheap;
    priority_queue<int,vector<int>,greater<int>>minheap;
    int curr=0;
    //Function to insert heap.
    void insertHeap(int &x)
    {
        
       if(maxheap.size()==0||maxheap.top()>x){
           maxheap.push(x);
       }
       else{
           minheap.push(x);
       }
       curr++;
       balanceHeaps();
    }
    
    //Function to balance heaps.
    void balanceHeaps()
    {
        if(curr%2!=0){
            if(maxheap.size()<=minheap.size()){
                maxheap.push(minheap.top());
                minheap.pop();
            }
        }
        else{
            if(maxheap.size()>minheap.size()){
                minheap.push(maxheap.top());
                maxheap.pop();
            }
            if(maxheap.size()<minheap.size()){
                maxheap.push(minheap.top());
                minheap.pop();
            }
        }
        
    }
    
    //Function to return Median.
    double getMedian()
    {
        if(curr%2!=0){
            return maxheap.top();
        }
        else{
            return (maxheap.top()+minheap.top())/2;
        }
    }
};


//{ Driver Code Starts.

int main()
{
    int n, x;
    int t;
    cin>>t;
    while(t--)
    {
    	Solution ob;
    	cin >> n;
    	for(int i = 1;i<= n; ++i)
    	{
    		cin >> x;
    		ob.insertHeap(x);
    	    cout << floor(ob.getMedian()) << endl;
    	}
    }
	return 0;
}
// } Driver Code Ends
