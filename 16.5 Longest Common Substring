//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
    public:
    
    int longestCommonSubstr (string s, string t, int n, int m)
    {
        
		    int dp[n+1][m+1]; 
		    for(int i=0;i<n+1;i++){
		        for(int j=0;j<m+1;j++){
		            if(i == 0 || j == 0){
		                dp[i][j] = 0;
		            }
		        }
		    }
		  //  int maxi=0;
		  //  int x=-1,y=-1;
		    for(int i=1;i<n+1;i++){
		        for(int j=1;j<m+1;j++){
		            if(s[i-1] == t[j-1]){
		                dp[i][j] = 1 + dp[i-1][j-1];
		            }
		            else{
		                dp[i][j] = 0;
		            }
		            if(maxi<dp[i][j]){
		            maxi=max(maxi,dp[i][j]);
		              //  x=i;
		              //  y=j;
		            }
		        }
		    }
		  //  x--;
		  //  y--;
		 
		  //  int length=maxi;
		  //  string s1="";
		   
		  //  while(length>0){
		  //      s1=s[x]+s1;
		  //      x--;
		  //      length--;
		  //  }
		  //  cout<<s1<<endl;
		    return maxi;

    }
};

//{ Driver Code Starts.

int main()
{
    int t; cin >> t;
    while (t--)
    {
        int n, m; cin >> n >> m;
        string s1, s2;
        cin >> s1 >> s2;
        Solution ob;

        cout << ob.longestCommonSubstr (s1, s2, n, m) << endl;
    }
}
// Contributed By: Pranay Bansal

// } Driver Code Ends
