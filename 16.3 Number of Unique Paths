//{ Driver Code Starts
//Initial template for C++
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template in C++

class Solution
{
    public:
    //Function to find total number of unique paths.
    int NumberOfPath(int a, int b)
    {
        //code here
        vector<vector<int>>dp(a,vector<int>(b,0));
        dp[0][0]=1;
        for(int i=0;i<a;i++){
            for(int j=0;j<b;j++){
                int left=0,top=0;
                if(j-1>=0)
            left=dp[i][j-1];
            if(i-1>=0)
            top =dp[i-1][j];
            dp[i][j]=max(dp[i][j],left+top);
            }
        }
        
        
        // totalpath(a-1,b-1,dp);
        return dp[a-1][b-1];
    }
    int totalpath(int cr,int cc,vector<vector<int>>&dp){
        if(cr==0&&cc==0)
        return dp[cr][cc]=1;
        if(cr<0||cc<0)
        return 0;
        if(dp[cr][cc]!=-1)
        return dp[cr][cc];
        
        int left=totalpath(cr,cc-1,dp);
        int top =totalpath(cr-1,cc,dp);
        return dp[cr][cc]=left+top;
    }
};


//{ Driver Code Starts.
int main()
{
    //taking total testcases
    int t;
    cin>>t;
    while(t--)
    {
        //taking dimensions of the matrix
        int a,b;
        cin>>a>>b;
        Solution ob;
        //calling NumberOfPath() function
        cout << ob.NumberOfPath(a,b) << endl;
    }
}


// } Driver Code Ends
