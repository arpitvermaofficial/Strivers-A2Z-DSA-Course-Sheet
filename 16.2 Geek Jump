//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
  int mod=1e9+7;
    int minimumEnergy(vector<int>& height, int n) {
        vector<int>dp(n,-1);
        vector<int>dp(n,-1);
        dp[0]=0;
        for(int i=1;i<n;i++){
            int maxjump=INT_MAX;
            for(int j=1;j<=k;j++){
                if(i-j>=0){
                    int jump=dp[i-j]+abs(height[i]-height[i-j]);
                }
                maxjump=min(jump,maxjump);
            }
            dp[i]=maxjump;
        }
        return dp[n-1];
        
    
    }
    int mini(int curr,vector<int>height,vector<int>dp){
        if(curr==0){
            return 0;
        }
        if(dp[curr]!=-1)
        return dp[curr];
        int left=mini(curr-1,height,dp)+abs(height[curr]-height[curr-1]);
        int right=INT_MAX;
        if(curr>1){
        right=mini(curr-2,height,dp)+abs(height[curr]-height[curr-2]);}
        return dp[curr]=min(left,right);
        
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        cin >> N;
        vector<int> arr(N);
        for (int i = 0; i < N; i++) {
            cin >> arr[i];
        }
        Solution obj;
        cout << obj.minimumEnergy(arr, N) << "\n";
    }
    return 0;
}
// } Driver Code Ends
