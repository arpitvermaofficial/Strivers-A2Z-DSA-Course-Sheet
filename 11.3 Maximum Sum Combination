//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    vector<int> maxCombinations(int n, int k, vector<int> &a, vector<int> &b) {
        // code here
        sort(a.begin(),a.end(),greater<int>());
         sort(b.begin(),b.end(),greater<int>());
         set<pair<int,int>>s;
         priority_queue<pair<int,pair<int,int>>>p;
         p.push({a[0]+b[0],{0,0}});
        
         vector<int>ans;
         for(int i=0;i<k;i++){
             pair<int,pair<int,int>>p1=p.top();
             p.pop();
             ans.push_back(p1.first);
             if(p1.second.first+1<n&&s.find({p1.second.first+1,p1.second.second})==s.end()){
                 p.push({a[p1.second.first+1]+b[p1.second.second],{p1.second.first+1,p1.second.second}});
                 s.insert({p1.second.first+1,p1.second.second});
             }
             
             if(p1.second.second+1<n&&s.find({p1.second.first,p1.second.second+1})==s.end()){
                 p.push({a[p1.second.first]+b[p1.second.second+1],{p1.second.first,p1.second.second+1}});
                 s.insert({p1.second.first,p1.second.second+1});
             }
         }
         return ans;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, K;
        cin >> N >> K;

        vector<int> A(N), B(N);
        for (int i = 0; i < N; i++) {
            cin >> A[i];
        }
        for (int i = 0; i < N; i++) {
            cin >> B[i];
        }
        Solution obj;
        vector<int> ans = obj.maxCombinations(N, K, A, B);
        for (auto &it : ans) cout << it << ' ';
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends
