//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
public:
	bool isBipartite(int V, vector<int>adj[]){
	    // Code here
	    int  color[V];
	    for(int i=0;i<V;i++)color[i]=-1;
	    for(int i=0;i<V;i++){
	        if(color[i]==-1){
	            if(bfs(i,V,adj,color)==false)return false;
	        }
	    }
	   return true ;
	   
	}
	bool bfs(int src,int V, vector<int> adj[],int color[]) {
        queue<int>q;
        q.push(src);
       color[src]=false;
        while(!q.empty()){
            int i=q.front();
            bool color1=color[i];
         
            q.pop();
            
            
            for(int j=0;j<adj[i].size();j++){
                if(color[adj[i][j]]==-1){
                q.push(adj[i][j]);
                color[adj[i][j]]=!color1;
                }
                else{
                    if(color[i]==color[adj[i][j]]){
                       
                    return false;
                    }
                }
                
            }
        }
          
        return true;
    }

};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int V, E;
		cin >> V >> E;
		vector<int>adj[V];
		for(int i = 0; i < E; i++){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		Solution obj;
		bool ans = obj.isBipartite(V, adj);    
		if(ans)cout << "1\n";
		else cout << "0\n";  
	}
	return 0;
}
// } Driver Code Ends15
