//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    int maximumPoints(vector<vector<int>>& points, int n) {
        // Code here
        vector<int>prev(4,0);
       
  prev[0] = max(points[0][1], points[0][2]);
  prev[1] = max(points[0][0], points[0][2]);
  prev[2] = max(points[0][0], points[0][1]);
  prev[3] = max(points[0][0], max(points[0][1], points[0][2]));

  for (int day = 1; day < n; day++) {
      vector<int>tem(4,0);
    for (int last = 0; last < 4; last++) {
      tem[last] = 0;
      for (int task = 0; task <3; task++) {
        if (task != last) {
          tem[last] = max(tem[last], points[day][task] + prev[task]);
        }
      }
    }
    prev=tem;
  }

  return prev[3];
    }
    int maxpoint(int curr,int prev,vector<vector<int>>&dp,vector<vector<int>>&points){
        if(curr==0){
            int maxi=INT_MIN;
            for(int i=0;i<3;i++){
                if(i!=prev){
                    maxi=max(maxi,points[curr][i]);
                }
            }
            return dp[curr][prev]=maxi;
        }
        if(dp[curr][prev]!=-1)
        return dp[curr][prev];
         int maxi=INT_MIN;
            for(int i=0;i<3;i++){
                if(i!=prev){
                    maxi=max(maxi,points[curr][i]+maxpoint(curr-1,i,dp,points));
                }
            }
            return dp[curr][prev]=maxi;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<vector<int>> points;
        for (int i = 0; i < n; ++i) {
            vector<int> temp;
            for (int j = 0; j < 3; ++j) {
                int x;
                cin >> x;
                temp.push_back(x);
            }
            points.push_back(temp);
        }

        Solution obj;
        cout << obj.maximumPoints(points, n) << endl;
    }
    return 0;
}
// } Driver Code Ends
