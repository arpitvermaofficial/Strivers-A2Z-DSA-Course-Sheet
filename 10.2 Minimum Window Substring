//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    //Function to find the smallest window in the string s consisting
    //of all the characters of string p.
    string smallestWindow (string s, string p)
    {
        if(s.length()==0||p.length()==0||p.length()>s.length()){
            return "-1";
        }
        int start=0,end=0,count=0,ans_start=0;
        int minlength=INT_MAX;
        vector<int>v(256,0);
        for(int i=0;i<p.length();i++){
            v[p[i]]++;
        }
        while(end<s.length()){
            if(v[s[end]]>0)
            count++;
            
            v[s[end]]--;
            
            while(count==p.length()){
                if(minlength>end-start+1){
                    minlength=end-start+1;
                    ans_start=start;
                }
                v[s[start]]++;
                if(v[s[start]]>0)
                count--;
                
                start++;
            }
            end++;
        }
        if(minlength==INT_MAX)
        return "-1";
        return s.substr(ans_start,minlength);
    }
};

//{ Driver Code Starts.
int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        string pat;
        cin>>pat;
        Solution obj;
        cout<<obj.smallestWindow(s, pat)<<endl;
        
    }
	return 0;
}
// } Driver Code Ends
