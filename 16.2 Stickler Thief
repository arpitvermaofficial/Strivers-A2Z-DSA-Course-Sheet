//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

// } Driver Code Ends
class Solution
{
    public:
    //Function to find the maximum money the thief can get.
    int FindMaxSum(int arr[], int n)
    {
        vector<int>dp(n+1,-1);
       int prev=arr[0];
       int prev1=0;
        for(int i=1;i<n;i++){
        int pick=INT_MIN;
        if(i>1);
        pick=prev1+arr[i];
        int notpick=prev;
        int curr=max(pick,notpick);
        prev1=prev;
        prev=curr;
        }
        return prev;
    }   
    int maxi(int i,vector<int>&dp,int arr[]){
        if(i==0){
            return dp[i]=arr[i];
        }
        if(dp[i]!=-1)return dp[i];
        int pick=INT_MIN;
        if(i>1);
        pick=maxi(i-2,dp,arr)+arr[i];
        int notpick=maxi(i-1,dp,arr);
        
        return dp[i]=max(pick,notpick);
    }
};

//{ Driver Code Starts.
int main()
{
    //taking total testcases
	int t;
	cin>>t;
	while(t--)
	{
	    //taking number of houses
		int n;
		cin>>n;
		int a[n];
		
		//inserting money of each house in the array
		for(int i=0;i<n;++i)
			cin>>a[i];
		Solution ob;
		//calling function FindMaxSum()
		cout<<ob.FindMaxSum(a,n)<<endl;
	}
	return 0;
}

// } Driver Code Ends
