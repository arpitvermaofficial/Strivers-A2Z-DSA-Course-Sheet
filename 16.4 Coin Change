//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    
long long int count(int coins[], int N, int sum) {
       vector<vector<long>>dp(N,vector<long>(sum+1,-1));
        return fun(N-1,sum,coins,dp);
       
    }
     long fun(int index,int target,int coins[],vector<vector<long>>&dp){
         
        if(index==0){
           return (target%coins[0]==0);
        }
         if(dp[index][target]!=-1)
        return dp[index][target];
       
       long notpick=fun(index-1,target,coins,dp);
       long pick=0;
       if(target>=coins[index])
       pick=fun(index,target-coins[index],coins,dp);
        return dp[index][target]=pick+notpick;
    }

};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int sum, N;
        cin >> sum >> N;
        int coins[N];
        for (int i = 0; i < N; i++) cin >> coins[i];
        Solution ob;
        cout << ob.count(coins, N, sum) << endl;
    }

    return 0;
}


// } Driver Code Ends
