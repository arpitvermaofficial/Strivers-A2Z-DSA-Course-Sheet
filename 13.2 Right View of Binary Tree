/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
           vector<int>v;
   queue<TreeNode*>q;
   q.push(root);
   int height=0;
   if(root==NULL)
   return v;
   v.push_back(root->val);
   while(!q.empty()){
       int size=q.size();
       
       for(int i=0;i<size;i++){
           TreeNode *top=q.front();
       q.pop();
          if(top->left!=NULL){
              if(v.size()-1==height){
                   v.push_back(top->left->val);
              }
              else{
                  v.pop_back();
                   v.push_back(top->left->val);
              }
              q.push(top->left);
          }
          if(top->right!=NULL){
              if(v.size()-1==height){
                   v.push_back(top->right->val);
              }
              else{
                  v.pop_back();
                   v.push_back(top->right->val);
              }
              q.push(top->right);
          }
       }
       height++;
   }
   return v;
    }
};
