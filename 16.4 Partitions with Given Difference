//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
  int mod=1e9+7;
    int countPartitions(int n, int d, vector<int>& arr) {
        // Code here
        int totalsum=0;
        for(auto it:arr)
          totalsum+=it;
          if(totalsum-d<0||(totalsum-d)%2!=0)
          return false;
	    int sum=(totalsum-d)/2;
	    
	    vector<vector<int>>dp(n,vector<int>(sum+1,0));
	    
	   if(arr[0]==0)
	   dp[0][0]=2;
	   else
	   dp[0][0]=1;
	   if(arr[0]<=sum&&arr[0]!=0)
	   dp[0][arr[0]]= 1;
	   for(int ind=1;ind<n;ind++){
	       for(int j=0;j<=sum;j++){
	            int notTaken = dp[ind-1][j]%mod;
                int taken = 0;
                if(arr[ind]<=j)
                    taken = dp[ind-1][j-arr[ind]]%mod;
               dp[ind][j]= (notTaken + taken)%mod;
	       }
	   }
	   return dp[n-1][sum];
	   
        
    }

};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, d;
        cin >> n >> d;
        vector<int> arr;

        for (int i = 0; i < n; ++i) {
            int x;
            cin >> x;
            arr.push_back(x);
        }

        Solution obj;
        cout << obj.countPartitions(n, d, arr) << "\n";
    }
    return 0;
}
// } Driver Code Ends
